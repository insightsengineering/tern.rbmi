[{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"First , thank taking time contribute! ‚úåÔ∏è üéâ love input regardless size, content scope - whether issue, feature request, bug-fix documentation enhancement. Thanks üôè rock ü§ò","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üêõ report bug? üí° request change? üö© submit change? üëó Style guide üßê Recognition model ‚ùì questions","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"introduction, please read README file. can also find vignettes . Usually find ‚ÄúGetting started‚Äù article. Please also see package manual form pkgdown website.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"project governed Code Conduct. participating, expected follow rules outlined .","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"code changes license covers project.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"how-to-report-a-bug","dir":"","previous_headings":"","what":"How to report a bug?","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests well bugs. opening new issue please double-check ‚Äôs already reported (don‚Äôt worry duplicate - manage). already - -vote ‚¨ÜÔ∏è. look faster! kindly ask write good issue minimal reproducible example demonstrates problem. also great know local environment (R session info) well. find template issues opening bug ticket. speed fixing process lot! üìà.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"how-to-request-the-change","dir":"","previous_headings":"","what":"How to request the change?","title":"Contribution Guidelines","text":"notice missing feature idea enhance existing functionalities - please let us know creating new issue. opening new issue please double-check ‚Äôs already reported (don‚Äôt worry occurs duplicate - manage). already - -vote ‚¨ÜÔ∏è. look faster! Please elaborate ‚Äú?‚Äù - ‚Äôs context, ‚Äôs benefit . find template opening feature request ticket. help us prioritize submit meaningful changes.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"How to submit a change?","what":"GitHub Flow","title":"Contribution Guidelines","text":"following GitHub Flow collaborate repository. order submit changes please following: Open branch Please see branch naming convention . don‚Äôt write access please fork first. Make changes. Make sure code passes checks well documented tested decrease existing test coverage üí™. Create PR(s) Please link issue make good change description. Include development assumptions necessary. Give details reviewer efficiently check changes. Address review comments Please apply changes necessary. disagree reviewer - please explain . approved - merge PR(s) delete branch","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"branching-convention","dir":"","previous_headings":"How to submit a change?","what":"Branching convention","title":"Contribution Guidelines","text":"case working task inside one specific repository, please name branch <issue_id>_<short_description> lowercase. Multiple words description divided underscore (_). E.g. 15_fix_spelling_error case try solve spelling mistake mentioned issue number 15. case working task one repository affects multiple repositories, please always name branches: <issue_id>_<issue_repo>_<short description> lowercase. Multiple words description divided underscore (_). E.g. 15_abc_fix_spelling_error case try solve spelling mistake inside xyz closes issue 15 inside abc.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"How to submit a change?","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. configuration already staged_dependencies.yaml file. just need name feature branches identically. exception branch naming convention described . Please read package manual details.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"How to submit a change? > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version well given package dependencies. recommend set-working environment way. can find details given GitHub Action execution log - step prints session info. find bugs older version dependencies - please create appropriate bug ticket.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"How to submit a change? > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend pre-commit tool combined R hooks pre-commit execute checks prior committing pushing. configuration already repository (). Please, follow installation guide official pre-commit page GitHub readme page R hooks.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide ‚Äôs checked lintr. slight modifications default settings available .lintr file. Although allows flexibility - recommend sticking style existing code. Please note style also lintr check place validate code.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"contribution highly welcomed appreciated. contribution data already GitHub repository insights feature, introduced objective rules recognize significant contribution became package author: Minimum 5% lines code authored (determined git blame query) top 5 contributors terms number commits lines added lines removed. package maintainer also reserves rights manually adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/CONTRIBUTING.html","id":"any-questions","dir":"","previous_headings":"","what":"Any questions","title":"Contribution Guidelines","text":"questions regarding contribution - please reach repository maintainer(s)!","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/articles/tern-rbmi.html","id":"introduction-to-tern-rbmi","dir":"Articles","previous_headings":"","what":"Introduction to tern.rbmi","title":"Introduction to tern.rbmi","text":"vignette shows general purpose syntax tern.rbmi R package. tern.rbmi provides interface Reference Based Multiple Imputation (rbmi) within tern framework. details rbmi package, please see Reference Based Multiple Imputation (rbmi). basic usage rbmi core functions described quickstart vignette:","code":"vignette(topic = \"quickstart\", package = \"rbmi\")"},{"path":"https://insightsengineering.github.io/tern.rbmi/articles/tern-rbmi.html","id":"example-of-using-tern-rbmi","dir":"Articles","previous_headings":"","what":"Example of using tern.rbmi","title":"Introduction to tern.rbmi","text":"rbmi package consists 4 core functions (plus several helper functions) typically called sequence: draws() - fits imputation models stores parameters impute() - creates multiple imputed datasets analyse() - analyses multiple imputed datasets pool() - combines analysis results across imputed datasets single statistic","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/articles/tern-rbmi.html","id":"the-data","dir":"Articles","previous_headings":"Example of using tern.rbmi","what":"The Data","title":"Introduction to tern.rbmi","text":"use publicly available example dataset antidepressant clinical trial active drug versus placebo. relevant endpoint Hamilton 17-item depression rating scale (HAMD17) assessed baseline weeks 1, 2, 4, 6. Study drug discontinuation occurred 24% subjects active drug 26% subjects placebo. data study drug discontinuation missing single additional intermittent missing observation.","code":"library(tern.rbmi) #> Loading required package: rbmi #> Loading required package: tern #> Loading required package: rtables #> Loading required package: magrittr #> Loading required package: formatters #> Registered S3 method overwritten by 'tern': #>   method   from  #>   tidy.glm broom library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union data <- antidepressant_data levels(data$THERAPY) <- c(\"PLACEBO\", \"DRUG\") # This is important! The order defines the computation order later  missing_var <- \"CHANGE\" vars <- list(   id = \"PATIENT\",   visit = \"VISIT\",   expand_vars = c(\"BASVAL\", \"THERAPY\"),   group = \"THERAPY\" ) covariates <- list(   draws = c(\"BASVAL*VISIT\", \"THERAPY*VISIT\"),   analyse = c(\"BASVAL\") )  data <- data %>%   dplyr::select(PATIENT, THERAPY, VISIT, BASVAL, THERAPY, CHANGE) %>%   dplyr::mutate(dplyr::across(.cols = vars$id, ~ as.factor(.x))) %>%   dplyr::arrange(dplyr::across(.cols = c(vars$id, vars$visit))) # Use expand_locf to add rows corresponding to visits with missing outcomes to the dataset data_full <- do.call(   expand_locf,   args = list(     data = data,     vars = c(vars$expand_vars, vars$group),     group = vars$id,     order = c(vars$id, vars$visit)   ) %>%     append(lapply(data[c(vars$id, vars$visit)], levels)) )  data_full <- data_full %>%   dplyr::group_by(dplyr::across(vars$id)) %>%   dplyr::mutate(!!vars$group := Filter(Negate(is.na), .data[[vars$group]])[1])  # there are duplicates - use first value data_full <- data_full %>%   dplyr::group_by(dplyr::across(c(vars$id, vars$group, vars$visit))) %>%   dplyr::slice(1) %>%   dplyr::ungroup() # need to have a single ID column data_full <- data_full %>%   tidyr::unite(\"TMP_ID\", dplyr::all_of(vars$id), sep = \"_#_\", remove = FALSE) %>%   dplyr::mutate(TMP_ID = as.factor(TMP_ID))"},{"path":"https://insightsengineering.github.io/tern.rbmi/articles/tern-rbmi.html","id":"creating-intercurrent-event-data","dir":"Articles","previous_headings":"Example of using tern.rbmi > The Data","what":"Creating intercurrent event data","title":"Introduction to tern.rbmi","text":"Set imputation strategy MAR patient least one missing observation.","code":"data_ice <- data_full %>%   dplyr::arrange(dplyr::across(.cols = c(\"TMP_ID\", vars$visit))) %>%   dplyr::filter(is.na(.data[[missing_var]])) %>%   dplyr::group_by(TMP_ID) %>%   dplyr::slice(1) %>%   dplyr::ungroup() %>%   dplyr::select(all_of(c(\"TMP_ID\", vars$visit))) %>%   dplyr::mutate(strategy = \"MAR\")"},{"path":"https://insightsengineering.github.io/tern.rbmi/articles/tern-rbmi.html","id":"draws","dir":"Articles","previous_headings":"Example of using tern.rbmi","what":"Draws","title":"Introduction to tern.rbmi","text":"rbmi::draws() function fits imputation models stores corresponding parameter estimates Bayesian posterior parameter draws. three main inputs rbmi::draws() function : data - primary longitudinal data.frame containing outcome variable covariates. data_ice - data.frame specifies first visit affected intercurrent event (ICE) imputation strategy handling missing outcome data ICE. one ICE imputed non-MAR strategy allowed per subject. method - statistical method used fit imputation models create imputed datasets.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/articles/tern-rbmi.html","id":"define-key-variables","dir":"Articles","previous_headings":"Example of using tern.rbmi > Draws","what":"Define key variables","title":"Introduction to tern.rbmi","text":"Define names key variables dataset covariates included imputation model using rbmi::set_vars(). Note covariates argument can also include interaction terms. Define imputation method use, create samples imputation parameters running draws() function.","code":"debug_mode <- FALSE  draws_vars <- rbmi::set_vars(   outcome = missing_var,   visit = vars$visit,   group = vars$group,   covariates = covariates$draws ) draws_vars$subjid <- \"TMP_ID\" draws_method <- method_bayes()  draws_obj <- rbmi::draws(   data = data_full,   data_ice = data_ice,   vars = draws_vars,   method = draws_method ) #>  #> SAMPLING FOR MODEL 'MMRM' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 0.000859 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 8.59 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 1200 [  0%]  (Warmup) #> Chain 1: Iteration:  120 / 1200 [ 10%]  (Warmup) #> Chain 1: Iteration:  201 / 1200 [ 16%]  (Sampling) #> Chain 1: Iteration:  320 / 1200 [ 26%]  (Sampling) #> Chain 1: Iteration:  440 / 1200 [ 36%]  (Sampling) #> Chain 1: Iteration:  560 / 1200 [ 46%]  (Sampling) #> Chain 1: Iteration:  680 / 1200 [ 56%]  (Sampling) #> Chain 1: Iteration:  800 / 1200 [ 66%]  (Sampling) #> Chain 1: Iteration:  920 / 1200 [ 76%]  (Sampling) #> Chain 1: Iteration: 1040 / 1200 [ 86%]  (Sampling) #> Chain 1: Iteration: 1160 / 1200 [ 96%]  (Sampling) #> Chain 1: Iteration: 1200 / 1200 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 1.10895 seconds (Warm-up) #> Chain 1:                3.71729 seconds (Sampling) #> Chain 1:                4.82624 seconds (Total) #> Chain 1: #> Warning in fit_mcmc(designmat = model_df_scaled[, -1, drop = FALSE], outcome = model_df_scaled[, : The largest R-hat is 1.55, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: The Effective Sample Size is below 40% for 5 parameters. Please #> consider increasing burn-in and/or burn-between, or the number of samples"},{"path":"https://insightsengineering.github.io/tern.rbmi/articles/tern-rbmi.html","id":"impute","dir":"Articles","previous_headings":"Example of using tern.rbmi","what":"Impute","title":"Introduction to tern.rbmi","text":"next step use parameters imputation model generate imputed datasets. done via rbmi::impute() function. function two key inputs: imputation model output rbmi::draws() reference groups relevant reference-based imputation methods. usage thus:","code":"impute_references <- c(\"DRUG\" = \"PLACEBO\", \"PLACEBO\" = \"PLACEBO\")  impute_obj <- rbmi::impute(   draws_obj,   references = impute_references )"},{"path":"https://insightsengineering.github.io/tern.rbmi/articles/tern-rbmi.html","id":"analyze","dir":"Articles","previous_headings":"Example of using tern.rbmi","what":"Analyze","title":"Introduction to tern.rbmi","text":"next step run analysis model imputed dataset. done defining analysis function calling rbmi::analyse() apply function imputed dataset.","code":"# Define analysis model analyse_fun <- ancova  ref_levels <- levels(impute_obj$data$group[[1]]) names(ref_levels) <- c(\"ref\", \"alt\")  analyse_obj <- rbmi::analyse(   imputations = impute_obj,   fun = analyse_fun,   vars = rbmi::set_vars(     subjid = \"TMP_ID\",     outcome = missing_var,     visit = vars$visit,     group = vars$group,     covariates = covariates$analyse   ) )"},{"path":"https://insightsengineering.github.io/tern.rbmi/articles/tern-rbmi.html","id":"pool","dir":"Articles","previous_headings":"Example of using tern.rbmi","what":"Pool","title":"Introduction to tern.rbmi","text":"rbmi::pool() function can used summarize analysis results across multiple imputed datasets provide overall statistic standard error, confidence intervals p-value hypothesis test null hypothesis effect equal 0.","code":"pool_obj <- rbmi::pool(   results = analyse_obj,   conf.level = 0.95,   alternative = c(\"two.sided\", \"less\", \"greater\"),   type = c(\"percentile\", \"normal\") )"},{"path":"https://insightsengineering.github.io/tern.rbmi/articles/tern-rbmi.html","id":"create-output","dir":"Articles","previous_headings":"Example of using tern.rbmi","what":"Create output","title":"Introduction to tern.rbmi","text":"Finally create output rtables tern packages Final product, reshape rbmi final results nicely formatted rtable object.","code":"library(broom)  df <- tidy(pool_obj) df #>   group       est    se_est lower_cl_est upper_cl_est   est_contr  se_contr #> 1   ref -1.615820 0.4862316    -2.575771   -0.6558685          NA        NA #> 2   alt -1.707626 0.4749573    -2.645319   -0.7699335 -0.09180645 0.6826279 #> 3   ref -4.188294 0.6588501    -5.489734   -2.8868540          NA        NA #> 4   alt -2.823317 0.6477358    -4.103041   -1.5435931  1.36497702 0.9249648 #> 5   ref -6.364775 0.7091915    -7.766071   -4.9634794          NA        NA #> 6   alt -4.100556 0.7179756    -5.521210   -2.6799027  2.26421881 1.0062449 #> 7   ref -7.701263 0.8189731    -9.324868   -6.0776575          NA        NA #> 8   alt -4.763032 0.7334587    -6.211673   -3.3143919  2.93823051 1.1127206 #>   lower_cl_contr upper_cl_contr     p_value relative_reduc visit conf_level #> 1             NA             NA          NA             NA     4       0.95 #> 2     -1.4394968       1.255884 0.893177243     0.05681725     4       0.95 #> 3             NA             NA          NA             NA     5       0.95 #> 4     -0.4621248       3.192079 0.142042417    -0.32590286     5       0.95 #> 5             NA             NA          NA             NA     6       0.95 #> 6      0.2752519       4.253186 0.025958566    -0.35574214     6       0.95 #> 7             NA             NA          NA             NA     7       0.95 #> 8      0.7361142       5.140347 0.009327063    -0.38152580     7       0.95 basic_table() %>%   split_cols_by(\"group\", ref_group = levels(df$group)[1]) %>%   split_rows_by(\"visit\", split_label = \"Visit\", label_pos = \"topleft\") %>%   summarize_rbmi() %>%   build_table(df) #> Visit                                       ref                alt        #> ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî #> 4                                                                         #>   Adjusted Mean (SE)                   -1.616 (0.486)     -1.708 (0.475)  #>     95% CI                            (-2.576, -0.656)   (-2.645, -0.770) #>   Difference in Adjusted Means (SE)                       -0.092 (0.683)  #>     95% CI                                               (-1.439, 1.256)  #>     Relative Reduction (%)                                     5.7%       #>     p-value (RBMI)                                            0.8932      #> 5                                                                         #>   Adjusted Mean (SE)                   -4.188 (0.659)     -2.823 (0.648)  #>     95% CI                            (-5.490, -2.887)   (-4.103, -1.544) #>   Difference in Adjusted Means (SE)                       1.365 (0.925)   #>     95% CI                                               (-0.462, 3.192)  #>     Relative Reduction (%)                                    -32.6%      #>     p-value (RBMI)                                            0.1420      #> 6                                                                         #>   Adjusted Mean (SE)                   -6.365 (0.709)     -4.101 (0.718)  #>     95% CI                            (-7.766, -4.963)   (-5.521, -2.680) #>   Difference in Adjusted Means (SE)                       2.264 (1.006)   #>     95% CI                                                (0.275, 4.253)  #>     Relative Reduction (%)                                    -35.6%      #>     p-value (RBMI)                                            0.0260      #> 7                                                                         #>   Adjusted Mean (SE)                   -7.701 (0.819)     -4.763 (0.733)  #>     95% CI                            (-9.325, -6.078)   (-6.212, -3.314) #>   Difference in Adjusted Means (SE)                       2.938 (1.113)   #>     95% CI                                                (0.736, 5.140)  #>     Relative Reduction (%)                                    -38.2%      #>     p-value (RBMI)                                            0.0093"},{"path":"https://insightsengineering.github.io/tern.rbmi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Zhu. Author, maintainer. Jana Stoilova. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhu J, Stoilova J (2022). tern.rbmi: Create interface rbmi tern. https://github.com/insightsengineering/tern.rbmi, https://insightsengineering.github.io/tern.rbmi/.","code":"@Manual{,   title = {tern.rbmi: Create interface for rbmi and tern},   author = {Joe Zhu and Jana Stoilova},   year = {2022},   note = {https://github.com/insightsengineering/tern.rbmi, https://insightsengineering.github.io/tern.rbmi/}, }"},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Create interface for rbmi and tern","text":"tern.rbmi provides interface Reference Based Multiple Imputation (rbmi) within tern framework.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Create interface for rbmi and tern","text":"details rbmi package, please see Reference Based Multiple Imputation (rbmi). basic usage rbmi core functions described quickstart vignette:","code":"vignette(topic = \"quickstart\", package = \"rbmi\")"},{"path":"https://insightsengineering.github.io/tern.rbmi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create interface for rbmi and tern","text":"recommended create use Github PAT install latest version package. PAT, run following: might need manually install package dependencies installing package without dependencies = FALSE argument install_github may produce error. See package vignettes browseVignettes(package = \"tern.rbmi\") usage package.","code":"Sys.setenv(GITHUB_PAT = \"your_access_token_here\") if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"insightsengineering/tern.rbmi@*release\", dependencies = FALSE)"},{"path":"https://insightsengineering.github.io/tern.rbmi/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/a_rbmi_lsmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted Analysis function which can be further customized by calling\nrtables::make_afun() on it. It is used as afun in rtables::analyze(). ‚Äî a_rbmi_lsmeans","text":"","code":"a_rbmi_lsmeans(df, .in_ref_col, show_relative = c(\"reduction\", \"increase\"))"},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/a_rbmi_lsmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatted Analysis function which can be further customized by calling\nrtables::make_afun() on it. It is used as afun in rtables::analyze(). ‚Äî a_rbmi_lsmeans","text":"df input dataframe .in_ref_col boolean variable, reference column specified show_relative \"reduction\" (control - treatment, default) \"increase\" (treatment - control) relative change baseline?","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/h_tidy_pool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to produce data frame with results\nof pool for a single visit ‚Äî h_tidy_pool","text":"","code":"h_tidy_pool(x)"},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/h_tidy_pool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to produce data frame with results\nof pool for a single visit ‚Äî h_tidy_pool","text":"x (pool) list pooled object rbmi analysis results. list includes analysis results, confidence level, hypothesis testing type.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/h_tidy_pool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to produce data frame with results\nof pool for a single visit ‚Äî h_tidy_pool","text":"","code":"data(\"rbmi_test_data\") pool_obj <- rbmi_test_data  h_tidy_pool(pool_obj$pars[1:3]) #>   group       est    se_est lower_cl_est upper_cl_est   est_contr  se_contr #> 1   ref -1.615820 0.4862316    -2.575771   -0.6558685          NA        NA #> 2   alt -1.707626 0.4749573    -2.645319   -0.7699335 -0.09180645 0.6826279 #>   lower_cl_contr upper_cl_contr   p_value relative_reduc #> 1             NA             NA        NA             NA #> 2      -1.439497       1.255884 0.8931772     0.05681725"},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/rbmi_test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset for tern.rbmi package. This is an pool object from the rbmi analysis, see\nbrowseVignettes(package = ","text":"","code":"rbmi_test_data"},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/rbmi_test_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dataset for tern.rbmi package. This is an pool object from the rbmi analysis, see\nbrowseVignettes(package = ","text":"object class pool length 5.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/s_rbmi_lsmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistics function which is extracting estimates from a tidied LS means\ndata frame. ‚Äî s_rbmi_lsmeans","text":"","code":"s_rbmi_lsmeans(df, .in_ref_col, show_relative = c(\"reduction\", \"increase\"))"},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/s_rbmi_lsmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistics function which is extracting estimates from a tidied LS means\ndata frame. ‚Äî s_rbmi_lsmeans","text":"df input dataframe .in_ref_col boolean variable, reference column specified show_relative \"reduction\" (control - treatment, default) \"increase\" (treatment - control) relative change baseline?","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/summarize_rbmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze function for tabulating LS means estimates from tidied\nrbmi pool results. ‚Äî summarize_rbmi","text":"","code":"summarize_rbmi(   lyt,   ...,   table_names = \"rbmi_summary\",   .stats = NULL,   .formats = NULL,   .indent_mods = NULL,   .labels = NULL )"},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/summarize_rbmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze function for tabulating LS means estimates from tidied\nrbmi pool results. ‚Äî summarize_rbmi","text":"lyt (layout) input layout analyses added . ... additional argument. table_names (character) can customized case vars analyzed multiple times, avoid warnings rtables. .stats (character) statistics select table. .formats (named character list) formats statistics. .indent_mods (named integer) indent modifiers labels. .labels (named character) labels statistics (without indent).","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/summarize_rbmi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze function for tabulating LS means estimates from tidied\nrbmi pool results. ‚Äî summarize_rbmi","text":"","code":"library(rtables) library(dplyr) #>  #> Attaching package: ‚Äòdplyr‚Äô #> The following objects are masked from ‚Äòpackage:stats‚Äô: #>  #>     filter, lag #> The following objects are masked from ‚Äòpackage:base‚Äô: #>  #>     intersect, setdiff, setequal, union library(broom)  data(\"rbmi_test_data\") pool_obj <- rbmi_test_data  df <- tidy(pool_obj)  afun <- make_afun(a_rbmi_lsmeans)  basic_table() %>%   split_cols_by(\"group\", ref_group = levels(df$group)[1]) %>%   split_rows_by(\"visit\", split_label = \"Visit\", label_pos = \"topleft\") %>%   summarize_rbmi() %>%   build_table(df) #> Visit                                       ref                alt        #> ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî #> 4                                                                         #>   Adjusted Mean (SE)                   -1.616 (0.486)     -1.708 (0.475)  #>     95% CI                            (-2.576, -0.656)   (-2.645, -0.770) #>   Difference in Adjusted Means (SE)                       -0.092 (0.683)  #>     95% CI                                               (-1.439, 1.256)  #>     Relative Reduction (%)                                     5.7%       #>     p-value (RBMI)                                            0.8932      #> 5                                                                         #>   Adjusted Mean (SE)                   -4.225 (0.656)     -2.874 (0.648)  #>     95% CI                            (-5.520, -2.930)   (-4.154, -1.593) #>   Difference in Adjusted Means (SE)                       1.351 (0.922)   #>     95% CI                                               (-0.470, 3.172)  #>     Relative Reduction (%)                                    -32.0%      #>     p-value (RBMI)                                            0.1447      #> 6                                                                         #>   Adjusted Mean (SE)                   -6.381 (0.703)     -4.159 (0.696)  #>     95% CI                            (-7.771, -4.991)   (-5.536, -2.782) #>   Difference in Adjusted Means (SE)                       2.222 (0.975)   #>     95% CI                                                (0.296, 4.149)  #>     Relative Reduction (%)                                    -34.8%      #>     p-value (RBMI)                                            0.0241      #> 7                                                                         #>   Adjusted Mean (SE)                   -7.580 (0.791)     -4.760 (0.756)  #>     95% CI                            (-9.145, -6.016)   (-6.254, -3.267) #>   Difference in Adjusted Means (SE)                       2.820 (1.085)   #>     95% CI                                                (0.676, 4.964)  #>     Relative Reduction (%)                                    -37.2%      #>     p-value (RBMI)                                            0.0103"},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/tern.rbmi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tern.rbmi Package ‚Äî tern.rbmi-package","title":"tern.rbmi Package ‚Äî tern.rbmi-package","text":"tern.rbmi analysis package create tables, listings graphs analyze clinical trials data.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/tern.rbmi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tern.rbmi Package ‚Äî tern.rbmi-package","text":"Maintainer: Joe Zhu joe.zhu@roche.com Authors: Jana Stoilova jana.stoilova@roche.com contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/tidy.pool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper method (for broom::tidy()) to prepare a data frame from an\npool rbmi object containing the LS means and contrasts and multiple visits ‚Äî tidy.pool","text":"","code":"# S3 method for pool tidy(x)"},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/tidy.pool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper method (for broom::tidy()) to prepare a data frame from an\npool rbmi object containing the LS means and contrasts and multiple visits ‚Äî tidy.pool","text":"x (pool) list pooled object rbmi analysis results. list includes analysis results, confidence level, hypothesis testing type.","code":""},{"path":"https://insightsengineering.github.io/tern.rbmi/reference/tidy.pool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper method (for broom::tidy()) to prepare a data frame from an\npool rbmi object containing the LS means and contrasts and multiple visits ‚Äî tidy.pool","text":"dataframe","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.rbmi/news/index.html","id":"ternrbmi-010","dir":"Changelog","previous_headings":"","what":"tern.rbmi 0.1.0","title":"tern.rbmi 0.1.0","text":"Initialize package.","code":""}]
